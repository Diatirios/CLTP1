#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = 
DEP_RELEASE = 
OUT_RELEASE = AST


OBJ_RELEASE = $(OBJDIR_RELEASE)/main.o

all: release

release:
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c AbstractNumber.cpp -o AbstractNumber.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Add.cpp -o Add.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c AND.cpp -o AND.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Argument.cpp -o Argument.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BinaryBooleanCondition.cpp -o BinaryBooleanCondition.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BinaryNumberCondition.cpp -o BinaryNumberCondition.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Boolean.cpp -o Boolean.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c BooleanCondition.cpp -o BooleanCondition.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Context.cpp -o Context.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Divide.cpp -o Divide.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Expression.cpp -o Expression.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factory.cpp -o Factory.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Function.cpp -o Function.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GlobalContext.cpp -o GlobalContext.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c GlobalFunctions.cpp -o GlobalFunctions.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c IfThenElse.cpp -o IfThenElse.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LessThanOrEqual.cpp -o LessThanOrEqual.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c LocalContext.cpp -o LocalContext.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o main.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Modulo.cpp -o Modulo.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c NOT.cpp -o NOT.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Number.cpp -o Number.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Operation.cpp -o Operation.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c OR.cpp -o OR.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Substract.cpp -o Substract.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Time.cpp -o Time.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c UnaryBooleanCondition.cpp -o UnaryBooleanCondition.o
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Variable.cpp -o Variable.o
	$(CXX) -o AST AbstractNumber.o Add.o AND.o Argument.o BinaryBooleanCondition.o BinaryNumberCondition.o Boolean.o BooleanCondition.o Context.o Divide.o Expression.o Factory.o Function.o GlobalContext.o GlobalFunctions.o IfThenElse.o LessThanOrEqual.o LocalContext.o main.o Modulo.o NOT.o Number.o Operation.o OR.o Substract.o Time.o UnaryBooleanCondition.o Variable.o

clean: 
	rm AbstractNumber.o Add.o AND.o Argument.o BinaryBooleanCondition.o BinaryNumberCondition.o Boolean.o BooleanCondition.o Context.o Divide.o Expression.o Factory.o Function.o GlobalContext.o GlobalFunctions.o IfThenElse.o LessThanOrEqual.o LocalContext.o main.o Modulo.o NOT.o Number.o Operation.o OR.o Substract.o Time.o UnaryBooleanCondition.o Variable.o

.PHONY: clean

